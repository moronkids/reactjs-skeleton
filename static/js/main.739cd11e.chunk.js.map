{"version":3,"sources":["c_burger/BuildControls/BuildControls/BuildControl.css","c_burger/BurgerIngredients/BurgerIngredients.css","index.css","c_burger/Burger.css","App.module.css","support/helpers/privateRoute.js","c_login/tes.js","c_burger/BurgerIngredients/BurgerIngredients.js","c_burger/Burger.js","c_burger/BuildControls/BuildControls/BuildControl.js","c_burger/BuildControls/BuildControl.js","containers/BurgerBuilder/BurgerBuilder.js","c_home/layout.js","c_home/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","pathname","state","from","location","Login","handleChange","event","setState","target","name","value","password","email","loading","data","this","className","cx","lcl","Col","md","span","offset","style","height","display","alignItems","Card","globalStyles","shadow","rounded","minWidth","padding","justifyContent","id","onSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","console","log","sts","status","history","push","setItem","alert","json","token","onChange","type","placeholder","htmlFor","btn","burgerIngredient","ingredient","classes","BreadBottom","BreadTop","Salad","Cheese","Bacon","Meat","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","Burger","buildControls","BuildControl","Label","label","onClick","removed","Less","disabled","added","More","controls","BuildControls","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","addIngredientHandler","updatedCounted","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","oldCount","priceDeduction","disabledInfo","layout","childern","Home","useState","loggedStatus","stat","setStat","useEffect","clear","window","href","App","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.739cd11e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__UTYiV\",\"Label\":\"BuildControl__Label__35lca\",\"Less\":\"BuildControl__Less__1307R\",\"More\":\"BuildControl__More__11ddV\",\"BuildControls\":\"BuildControl__BuildControls__2kVsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients__BreadBottom__38SV6\",\"BreadTop\":\"BurgerIngredients__BreadTop__3kiQU\",\"Seeds1\":\"BurgerIngredients__Seeds1__26yLL\",\"Seeds2\":\"BurgerIngredients__Seeds2__3-VSz\",\"Meat\":\"BurgerIngredients__Meat__1HwEd\",\"Cheese\":\"BurgerIngredients__Cheese__oYtpJ\",\"Salad\":\"BurgerIngredients__Salad__1ShXC\",\"Bacon\":\"BurgerIngredients__Bacon__1Arl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"index__App__25spO\",\"App-logo\":\"index__App-logo__13boJ\",\"App-logo-spin\":\"index__App-logo-spin__3YoN-\",\"App-header\":\"index__App-header__3vAv1\",\"App-link\":\"index__App-link__l-R5D\",\"overlay\":\"index__overlay__2rmPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__eMX-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\",\"overlay\":\"App_overlay__1bKt8\"};","import React, { useState, useEffect, Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { Divider } from '@material-ui/core';\n\nexport const PrivateRoute = ({component:Component, ...rest}) =>\n(    <Route\n        {...rest}\n        render={props =>\n        localStorage.getItem('email') ?\n           (<Component {...props} />):\n           (<Redirect to={{\n               pathname:\"/login\",\n               state: {from:props.location}\n           }}/>)\n        }\n    />);\n    // alert(props);\n\n// export default function privateRoute(props){\n//     console.log(props);\n//     return(\n\n//         <Component {...props}/>\n//     );\n// }","import React, { Component } from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport { SemipolarLoading } from 'react-loadingg';\n// import styles from '../bs.module.css';\nimport globalStyles from '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport lcl from '../index.css';\nimport cx from 'classnames'\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      email: '',\n      loading: false\n    }\n  }\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  render() {\n    const data = { password: this.state.password, email: this.state.email };\n    const { loading } = this.state;\n    // console.log(loading)\n    const onSubmit = event => {\n      this.setState({ loading: true }, () => {\n      })\n      event.preventDefault();\n      fetch('https://reqres.in/api/login', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n        .then(res => {\n          console.log({ sts: res })\n          if (res.status === 400) {\n            this.setState({\n              loading: false\n            })\n            // localStorage.setItem('email', this.state.email);\n            this.props.history.push('/login');\n            // alert(res)\n          } else if (res.status === 200) {\n            this.setState({\n              loading: false\n            })\n            localStorage.setItem('email', this.state.email);\n            this.props.history.push('/home');\n            alert(res.status)\n          }\n          else {\n            this.props.history.push('/login');\n            alert('network occured error')\n          }\n          return res.json();\n        })\n        .then(res => {\n\n          if (res.token != null) {\n            localStorage.setItem('token', res.token);\n          }\n        })\n    }\n    return (\n      <div>\n        {loading ? <div><SemipolarLoading /><div className={cx(lcl['overlay'])} /></div> : ''}\n        <Col md={{ span: 4, offset: 4 }} style={{ height: '100vh' }}>\n          <div style={{ height: '100vh', display: 'flex', alignItems: 'center' }}>\n            <Card className={cx(globalStyles['mx-auto'], globalStyles['my-auto'], globalStyles.shadow, globalStyles['p-3'], globalStyles['mb-5'], globalStyles['bg-white'], globalStyles.rounded)} style={{ minWidth: '18rem', height: 'auto', padding: '30px', display: 'flex', justifyContent: 'center' }}>\n              <form id=\"formlg\" onSubmit={onSubmit}>\n                <h3>Sign In</h3>\n                <div className={cx(globalStyles['form-group'])}>\n                  <label>Email address</label>\n                  <input onChange={this.handleChange} name=\"email\" type=\"email\" className={cx(globalStyles['form-control'])} placeholder=\"Enter email\" />\n                </div>\n                <div className={cx(globalStyles['form-group'])}>\n                  <label>Password</label>\n                  <input onChange={this.handleChange} name=\"password\" type=\"password\" className={cx(globalStyles['form-control'])} placeholder=\"Enter password\" />\n                </div>\n                <div className={cx(globalStyles['form-group'])}>\n                  <div className={cx(globalStyles['custom-control'], globalStyles['custom-checkbox'])}>\n                    <input type=\"checkbox\" className={cx(globalStyles['custom-control-input'])} id=\"customCheck1\" />\n                    <label className={cx(globalStyles['custom-control-label'])} htmlFor=\"customCheck1\">Remember me</label>\n                  </div>\n                </div>\n                <button type=\"submit\" className={cx(globalStyles.btn, globalStyles['btn-primary'], globalStyles['btn-block'])}>Submit</button>\n              </form>\n            </Card>\n          </div>\n        </Col>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredients.css';\n\nclass burgerIngredient extends Component {\n\n\n    render(){\n\n        let ingredient = null;\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                    </div>\n                )\n                break;\n            case ('salad'):\n                ingredient = (\n\n                    <div className={classes.Salad}></div>\n                )\n                break;\n            case ('cheese'):\n                ingredient = (\n\n                    <div className={classes.Cheese}></div>\n                )\n                break;\n            case ('bacon'):\n                ingredient = (\n\n                    <div className={classes.Bacon}></div>\n                )\n                break;\n            case ('meat'):\n                ingredient = (\n                    <div className={classes.Meat}></div>\n                )\n                break;\n        }\n        return ingredient;\n    }\n};\n\nburgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;","import React from 'react';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\nimport classes from './Burger.css';\n\nconst burger = (props)  => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey =>{\n        return[...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredients key={igKey + i} type={igKey} />\n        });\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n    // console.log(transformedIngredients);\n    // if (Array.isArray(transformedIngredients)) {\n    //     console.log('masuk')\n    //     transformedIngredients = <p>Please start adding ingredients</p>;\n    // }\n    // console.log({dor: transformedIngredients});\n\n\n    return(\n        <div className={classes.Burger}>\n            <BurgerIngredients type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredients type=\"bread-bottom\"/>\n        </div>\n    );\n}\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.css'\nconst buildControls = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button onClick={props.removed} className={classes.Less} disabled={props.disabled}>Less</button>\n        <button onClick={props.added} className={classes.More}>More</button>\n    </div>\n);\n\nexport default buildControls;\n","import React from 'react';\nimport BuildControl from './BuildControls/BuildControl';\nimport classes from './BuildControls/BuildControl.css'\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type :'meat'}\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        {controls.map(ctrl => (\n            <BuildControl\n            key={ctrl.label}\n            label={ctrl.label}\n            // type={ctrl.type}\n            added={() => props.ingredientAdded(ctrl.type)}\n            removed={() => props.ingredientRemoved(ctrl.type)}\n            disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n    </div>\n);\n\nexport default buildControls;","import React, {Component} from 'react';\nimport aux from '../../hoc/Aux';\nimport Burger from '../../c_burger/Burger';\nimport BuildControl from '../../c_burger/BuildControls/BuildControl';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat:0\n        },\n        totalPrice: 4\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount +1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients});\n\n    }\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\n    }\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        \n        return (\n            <>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControl\n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved={this.removeIngredientHandler}\n                disabled={disabledInfo}\n\n                />\n            </>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, { Fragment } from 'react';\nimport dor from '../hoc/Aux';\nimport BurgerBuilder from '../containers/BurgerBuilder/BurgerBuilder'\n\nconst layout = (props) => (\n    <>\n        <div>toolbar, sidedrawer, backdrop</div>\n        <main>\n            {props.childern}\n            <BurgerBuilder/>\n        </main>\n    </>\n);\n\nexport default layout;","import React, {useState, useEffect, Component} from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Layout from './layout';\nimport BurgerBuilder from '../containers/BurgerBuilder/BurgerBuilder';\nimport Burger from '../c_burger/Burger';\n\nexport default function Home(props) {\n    const [stat, setStat] = useState({\n        loggedStatus : 'Belum Login'\n    })\n\n    const checkStatus = () => {\n        let status = localStorage.getItem('email');\n        if (status != null) {\n            setStat({ ...stat, loggedStatus: \"Sudah login\"});\n        }\n    }\n\n    useEffect(() => {\n        checkStatus();\n    }, {});\n\n    const logOut = () => {\n        alert('logout');\n        localStorage.clear();\n        window.location.href = '/home';\n    }\n    return(\n        <div>\n            <p>Status :</p>\n            <br/>\n            <h3>{stat.loggedStatus}</h3>\n            <br/>\n            <Layout>\n                <BurgerBuilder></BurgerBuilder>\n                <Burger></Burger>\n            </Layout>\n            <h1>Logout</h1>\n            <button type=\"submit\" onClick={logOut}>Submit</button>\n        </div>\n    );\n}\n","import React from 'react';\n// import logo from './logo.svg';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.module.css';\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {PrivateRoute} from './support/helpers/privateRoute';\n// import PrivateRoute from './support/helpers/privateRoute';\nimport Login from './c_login/tes';\nimport Home from './c_home/home';\nimport Layout from './c_home/layout';\n// import MaterialIcon from 'react-material-iconic-font'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/(login|)\" component={Login} />\n      <PrivateRoute path=\"/home\" component={Home} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}