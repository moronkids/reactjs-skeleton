{"ast":null,"code":"import _objectSpread from \"/Users/spacetroopers/Music/reactjs-skeleton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/spacetroopers/Music/reactjs-skeleton/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport aux from '../../hoc/Aux';\nimport Burger from '../../c_burger/Burger';\nimport BuildControl from '../../c_burger/BuildControls/BuildControl';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCounted = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(BuildControl, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/spacetroopers/Music/reactjs-skeleton/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","aux","Burger","BuildControl","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","render","disabledInfo","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAKlCU,KALkC,GAK1B;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETG,QAAAA,KAAK,EAAE,CAFE;AAGTF,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAC;AAJI,OADT;AAOJK,MAAAA,UAAU,EAAE;AAPR,KAL0B;;AAAA,SAelCC,oBAfkC,GAeVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;AACA,YAAME,cAAc,GAAGD,QAAQ,GAAE,CAAjC;;AACA,YAAME,kBAAkB,qBACjB,KAAKP,KAAL,CAAWC,WADM,CAAxB;;AAGAM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,cAA3B;AACA,YAAME,aAAa,GAAGd,iBAAiB,CAACU,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAEQ,QAAd;AAAwBT,QAAAA,WAAW,EAAEM;AAArC,OAAd;AAEH,KA3BiC;;AAAA,SA4BlCK,uBA5BkC,GA4BPR,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;;AACA,UAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACf;AACH;;AACD,YAAMC,cAAc,GAAGD,QAAQ,GAAG,CAAlC;;AACA,YAAME,kBAAkB,qBACjB,KAAKP,KAAL,CAAWC,WADM,CAAxB;;AAGAM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,cAA3B;AACA,YAAMO,cAAc,GAAGnB,iBAAiB,CAACU,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGI,cAA5B;AACA,WAAKF,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAEQ,QAAd;AAAwBT,QAAAA,WAAW,EAAEM;AAArC,OAAd;AAEH,KA3CiC;AAAA;;AA4ClCO,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,qBACX,KAAKf,KAAL,CAAWC,WADA,CAAlB;;AAGA,SAAK,IAAIe,GAAT,IAAgBD,YAAhB,EAA8B;AAC1BA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACH;;AAED,WACI,0CACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AACA,MAAA,eAAe,EAAE,KAAKE,oBADtB;AAEA,MAAA,iBAAiB,EAAE,KAAKS,uBAFxB;AAGA,MAAA,QAAQ,EAAEG,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAWH;;AA/DiC;;AAkEtC,eAAehB,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport aux from '../../hoc/Aux';\nimport Burger from '../../c_burger/Burger';\nimport BuildControl from '../../c_burger/BuildControls/BuildControl';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat:0\n        },\n        totalPrice: 4\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount +1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients});\n\n    }\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n\n    }\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        \n        return (\n            <>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControl\n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved={this.removeIngredientHandler}\n                disabled={disabledInfo}\n\n                />\n            </>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}